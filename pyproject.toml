[tool.poetry]
name = "ska-src-maltopuft-etl"
version = "0.0.1"
description = "ETL scripts for the MAchine Learning TOolkit for PUlsars and Fast Transients"
authors = ["Elliot Goodwin <elliot.goodwin@manchester.ac.uk>"]
readme = "README.md"
license = "BSD-3-Clause"
packages = [
    { include = "ska_src_maltopuft_etl", from = "src" }
]

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[[tool.poetry.source]]
name = "ska-nexus"
url = "https://artefact.skao.int/repository/pypi-internal/simple"
priority = "supplemental"


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
ska-ser-logging = "^0.4.3"
orjson = "^3.10.6"
pydantic = "^2.8.2"
pyaml = "^24.7.0"
pandas = "^2.2.2"
pyarrow = "^17.0.0"
astropy = "^6.1.2"
sqlalchemy = "^2.0.31"
psrqpy = "^1.2.10"
ska-src-maltopuft-backend = {git = "https://gitlab.com/ska-telescope/src/ska-src-maltopuft-backend.git"}
dagster = "^1.8.8"
polars = "^1.14.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-json-report = "^1.5.0"
pylint = "^3.2.5"
black = "^24.4.2"
isort = "^5.13.2"
flake8 = "^7.1.0"
pylint-junit = "^0.3.4"
ruff = "^0.5.3"
pytest-bdd = "^7.2.0"
types-pyyaml = "^6.0.12.20240311"
pandas-stubs = "^2.2.2.240603"
dagster-webserver = "^1.8.8"


[tool.poetry.group.cli]
optional = true
[tool.poetry.group.cli.dependencies]
click = "^8.1.7"


[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
recommonmark = "^0.7.1"
ska-ser-sphinx-theme = "^0.1.3"
myst-parser = "^2.0.0"
sphinx-autoapi = "^3.1.2"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
    --cov src
    --cov-report=term-missing
    --cov-report html:build/reports/code-coverage
"""


testpaths = ["tests"]

[tool.coverage.run]
source = ["./src"]
omit = ["**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "**/__init__.py",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "node_modules",
    "site-packages",
    "test",
    "venv",
    ".make",
]

# Assume Python 3.11
target-version = "py311"


[tool.ruff.lint]
# Pylint, flake8 and isort replacement
select = ["ALL"]
ignore = [
    "ANN101",  # missing-type-self
    "ANN401",  # any-type
    "B008",  # function-call-in-default-argument
    "D203", "D213",  # Silence incompatability warnings
    "D205",  # blank-line-after-summary
    "D401",  # non-imperative-mood
    "D407",  # dashed-underline-after-section
    "G004",  # logging-f-string
    "INP001",  # implicit-namespace-package
    "PD901",  # pandas-df-variable-name
    "PT012",  # `pytest.raises()` block should contain a single simple statement
    "S101", "S104",  # assert, possible binding to all interfaces
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[[tool.mypy.overrides]]
module = [
    "astropy.time",
    "psrqpy",
    "ska_ser_logging",
    "ska_src_maltopuft_backend.*",
    "tqdm",
]
ignore_missing_imports = true


[tool.dagster]
module_name = "src.ska_src_maltopuft_etl.dagster.definitions"
code_location_name = "src.ska_src_maltopuft_etl.dagster"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
